You/PRP encode/VBP it/PRP for/IN HTML/NNP before/IN you/PRP put/VBP it/PRP in/IN the/DT HTML/NNP document/NN ./.
With/IN JavaScript/NNP -LRB-/-LRB- since/IN that/DT is/VBZ the/DT only/JJ language/NN you/PRP 've/VBP mentioned/VBN -RRB-/-RRB- ,/, that/WDT generally/RB means/VBZ using/VBG createTextNode/NN instead/RB of/IN innerHTML/NNP This/NNP question/NN appears/VBZ to/TO be/VB off-topic/JJ because/IN it/PRP belongs/VBZ on/IN codereview.stackexchange.com/NNP Yes/NNP ,/, it/PRP does/VBZ ,/, especially/RB ,/, since/IN nothing/NN used/VBN in/IN the/DT string/NN concatenation/NN comes/VBZ from/IN user/NN input/NN ,/, so/RB even/RB without/IN encodeHTML/NN ,/, it/PRP could/MD n't/RB be/VB exploited/VBN in/IN a/DT useful/JJ way/NN ./.
The/DT protection/NN comes/VBZ from/IN using/VBG bound/VBN parameters/NNS ,/, not/RB from/IN using/VBG prepared/JJ statement/NN -LRB-/-LRB- it/PRP is/VBZ just/RB that/IN people/NNS tend/VBP to/TO switch/VB to/TO using/VBG prepared/JJ statements/NNS at/IN the/DT same/JJ time/NN as/IN bound/VBN parameters/NNS ,/, so/IN the/DT two/CD ideas/NNS get/VBP conflated/VBN -RRB-/-RRB- ./.
With/IN the/DT postgres/NNS extension/NN :/: $/$ result/NN =/JJ pg_query_params/NNS -LRB-/-LRB- $/$ dbh/NN ,/, `/`` SELECT/VB */SYM FROM/NN users/NNS WHERE/VBP email/NN =/JJ $/$ 1/CD '/'' ,/, array/NN -LRB-/-LRB- $/$ email/NN -RRB-/-RRB- -RRB-/-RRB- ;/:
