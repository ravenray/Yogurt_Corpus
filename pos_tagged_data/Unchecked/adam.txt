Poor/NNP Performance/NNP Caused/NNP by/IN Correlated/NNP Subqueries/NNP Most/NNP of/IN the/DT time/NN you/PRP want/VBP to/TO avoid/VB correlated/JJ subqueries/NNS ./.
A/DT subquery/NN is/VBZ correlated/VBN if/IN ,/, within/IN the/DT subquery/NN ,/, there/EX is/VBZ a/DT reference/NN to/TO a/DT column/NN from/IN the/DT outer/JJ query/NN ./.
When/WRB this/DT happens/VBZ ,/, the/DT subquery/NN is/VBZ executed/VBN at/IN least/JJS once/RB for/IN every/DT row/NN returned/VBD and/CC could/MD be/VB executed/VBN more/JJR times/NNS if/IN other/JJ conditions/NNS are/VBP applied/VBN after/IN the/DT condition/NN containing/VBG the/DT correlated/JJ subquery/NN is/VBZ applied/VBN ./.
Forgive/VB the/DT contrived/JJ example/NN and/CC the/DT Oracle/NNP syntax/NN ,/, but/CC let/VB 's/POS say/VB you/PRP wanted/VBD to/TO find/VB all/PDT the/DT employees/NNS that/WDT have/VBP been/VBN hired/VBN in/IN any/DT of/IN your/PRP$ stores/NNS since/IN the/DT last/JJ time/NN the/DT store/NN did/VBD less/JJR than/IN $/$ 10,000/CD of/IN sales/NNS in/IN a/DT day/NN ./.
select/JJ e.first/FW _/FW name/NN ,/, e.last/FW _/FW name/NN from/IN employee/NN e/SYM where/WRB e.start/FW _/FW date/NN >/JJR -LRB-/-LRB- select/JJ max/NN -LRB-/-LRB- ds.transaction/NN _/CD date/NN -RRB-/-RRB- from/IN daily_sales/NNS ds/JJ where/WRB ds.store/FW _/FW id/FW =/JJ e.store/FW _/FW id/FW and/CC ds.total/NN </JJR 10000/CD -RRB-/-RRB- The/DT subquery/NN in/IN this/DT example/NN is/VBZ correlated/VBN to/TO the/DT outer/JJ query/NN by/IN the/DT store_id/NN and/CC would/MD be/VB executed/VBN for/IN every/DT employee/NN in/IN your/PRP$ system/NN ./.
One/CD way/NN that/IN this/DT query/NN could/MD be/VB optimized/VBN is/VBZ to/TO move/VB the/DT subquery/NN to/TO an/DT inline-view/NN ./.
select/JJ e.first/FW _/FW name/NN ,/, e.last/FW _/FW name/NN from/IN employee/NN e/SYM ,/, -LRB-/-LRB- select/JJ ds.store/FW _/FW id/FW ,/, max/NN -LRB-/-LRB- s.transaction/NN _/CD date/NN -RRB-/-RRB- transaction_date/NN from/IN daily_sales/NNS ds/JJ where/WRB ds.total/NN </JJR 10000/CD group/NN by/IN s.store/FW _/FW id/FW -RRB-/-RRB- dsx/NN where/WRB e.store/FW _/FW id/FW =/JJ dsx.store/FW _/FW id/FW and/CC e.start/FW _/FW date/NN >/JJR dsx.transaction/FW _/FW date/NN In/IN this/DT example/NN ,/, the/DT query/NN in/IN the/DT from/IN clause/NN is/VBZ now/RB an/DT inline-view/JJ -LRB-/-LRB- again/RB some/DT Oracle/NNP specific/JJ syntax/NN -RRB-/-RRB- and/CC is/VBZ only/RB executed/VBN once/RB ./.
Depending/VBG on/IN your/PRP$ data/NNS model/NN ,/, this/DT query/NN will/MD probably/RB execute/VB much/RB faster/RBR ./.
It/PRP would/MD perform/VB better/JJR than/IN the/DT first/JJ query/NN as/IN the/DT number/NN of/IN employees/NNS grew/VBD ./.
The/DT first/JJ query/NN could/MD actually/RB perform/VB better/JJR if/IN there/EX were/VBD few/JJ employees/NNS and/CC many/JJ stores/NNS -LRB-/-LRB- and/CC perhaps/RB many/JJ of/IN stores/NNS had/VBD no/DT employees/NNS -RRB-/-RRB- and/CC the/DT daily_sales/NN table/NN was/VBD indexed/VBN on/IN store_id/NN ./.
This/DT is/VBZ not/RB a/DT likely/JJ scenario/NN but/CC shows/VBZ how/WRB a/DT correlated/JJ query/NN could/MD possibly/RB perform/VB better/JJR than/IN an/DT alternative/NN ./.
I/PRP 've/VBP seen/VBN junior/NN developers/NNS correlate/VBP subqueries/NNS many/JJ times/NNS and/CC it/PRP usually/RB has/VBZ had/VBN a/DT severe/JJ impact/NN on/IN performance/NN ./.
However/RB ,/, when/WRB removing/VBG a/DT correlated/JJ subquery/NN be/VB sure/JJ to/TO look/VB at/IN the/DT explain/VBP plan/NN before/IN and/CC after/IN to/TO make/VB sure/JJ you/PRP are/VBP not/RB making/VBG the/DT performance/NN worse/JJR ./.
